name: Build and Test Workflow
on:
  push:
    branches:
      - master 
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'

env:
  IMAGE_BASE_DIR: container

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  validate-package-json:
    needs: check-permission
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate package.json
        uses: zowe-actions/shared-actions/validate-package-json@main


  build-ubuntu-amd64:
    needs: validate-package-json
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.PERFORM_RELEASE }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-mvs
          linux-distro: ubuntu
          cpu-arch: amd64

      - uses: zowe-actions/shared-actions/docker-build-local@main
        with:
          build-arg-list: ZOWE_BASE_IMAGE=latest-ubuntu
        timeout-minutes: 5
    outputs:
      IMAGE_NAME_FULL_REMOTE: ${{ env.IMAGE_NAME_FULL_REMOTE }}

  
# test on explorer-mvs image
  integration-test:
    runs-on: ubuntu-latest
    needs: build-ubuntu-amd64
    steps:
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2

      - name: '[Prep 2] Cache node modules'
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ~/.nvm/.cache
            ~/.nvm/versions
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-

      - name: '[Prep 3] Prepare workflow'
        uses: zowe-actions/shared-actions/prepare-workflow@main

      - name: '[Prep 4] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      # - name: '[Prep extra] explorer-mvs exclusive - upgrade npm to v7'
      #   run: |
      #     npm install -g npm
      #     npm -v

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-mvs'

      - name: '[Test 1] Preparing integration test'
        run: |
          echo "Preparing server for integration test ..."
          ./bin/prepare-fvt.sh \
          "${CUSTOM_FVT_ZOSMF_HOST:-${{ env.DEFAULT_FVT_ZOSMF_HOST }}}" \
          "${CUSTOM_FVT_ZOSMF_PORT:-${{ env.DEFAULT_FVT_ZOSMF_PORT }}}" \
          "${{ needs.build-ubuntu-amd64.outputs.IMAGE_NAME_FULL_REMOTE }}"
          sleep 120

      - name: "[Test 2] Print container service logs - discovery-service"
        run: |
          cd .fvt
          docker compose logs discovery-service
      
      - name: "[Test 3] Print container service logs - gateway-service"
        run: |
          cd .fvt
          docker compose logs gateway-service

      - name: "[Test 4] Print container service logs - explorer-mvs"
        run: |
          cd .fvt
          docker compose logs explorer-mvs

      - name: "[Test 5] Start integration test"
        run: |
          export ZOWE_USERNAME=${{ secrets.SSH_MARIST_USERNAMEP }}
          export ZOWE_PASSWORD=${{ secrets.SSH_MARIST_PASSWORDP }}
          echo "Starting integration test ..."
          export SERVER_HOST_NAME=${CUSTOM_FVT_SERVER_HOSTNAME:-${{ env.DEFAULT_FVT_SERVER_HOSTNAME }}}
          export SERVER_HTTPS_PORT=7554
          export TEST_BROWSER=firefox
          npm run test:fvt
        # Uncomment the env part to customize test parameters
        #env:
        #   CUSTOM_FVT_ZOSMF_HOST:
        #   CUSTOM_FVT_ZOSMF_PORT:
        #   CUSTOM_FVT_SERVER_HOSTNAME: